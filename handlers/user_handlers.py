from config_data.config import load_config, Config
from aiogram import F
from aiogram import Router, Bot
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from aiogram.types import Message
from aiogram.fsm.state import default_state, State, StatesGroup
from database.database import db_connect, save_user_request, get_user_request
from keyboards.keyboards import main_keyboard, cancel_keyboard, level_keyboard, target_keyboard, time_keyboard
from keyboards.keyboards import faq_keyboard, back_keyboard
from lexicon.lexicon import LEXICON_RU
from states.states import UserInformation

# –°–æ–∑–¥–∞–µ–º "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_dict: dict[int, dict[str, str | int | bool]] = {}
config: Config = load_config()
bot = Bot(token=config.tg_bot.token)
router = Router()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        text=LEXICON_RU['/start'],
        reply_markup=main_keyboard
    )
    await db_connect()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer(text=LEXICON_RU['/help'])


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–ø–∫—É cancel
@router.callback_query(F.data.in_(['cancel_pressed']))
async def apply_cancel(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await state.clear()
    await callback.message.edit_text(
        text=LEXICON_RU['/start'],
        reply_markup=main_keyboard
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É /check request
@router.callback_query(F.data.in_(['check request']))
async def check_button_press(callback: CallbackQuery, state: FSMContext):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ "–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    if get_user_request(callback.from_user.id) is not None:
        user_data: tuple = get_user_request(callback.from_user.id)
        await callback.message.delete_reply_markup()
        await callback.message.edit_text(
            text=f'–ê–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!‚úâÔ∏è\n\n–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µüìÑ:\n–ò–º—è: {user_data[1]}\n–£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ: {user_data[2]}\n–í–æ–∑—Ä–∞—Å—Ç: {user_data[3]}\n–¶–µ–ª—å –æ–±—É—á–µ–Ω–∏—è: {user_data[4]}\n–¢–µ–ª–µ—Ñ–æ–Ω: {user_data[5]}\n–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π: {user_data[6]}',
            reply_markup=cancel_keyboard)
    # –ï—Å–ª–∏ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –Ω–µ—Ç - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å
    else:
        get_user_request(callback.from_user.id)
        await callback.message.delete_reply_markup()
        await callback.message.delete()
        await callback.message.answer(text='–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω—è–ª–∏ –∞–Ω–∫–µ—Ç—É. –ß—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å - '
                                           "–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <‚úÖ–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É>", reply_markup=main_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É /apply
@router.callback_query(F.data.in_(['apply_button_pressed']))
async def apply_button_press(callback: CallbackQuery, state: FSMContext):
    if get_user_request(callback.from_user.id) is None:
        await state.clear()
        await callback.message.edit_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:', reply_markup=cancel_keyboard)
        await state.set_state(UserInformation.name)
    else:
        await callback.message.delete_reply_markup()
        await callback.message.delete()
        await callback.message.answer(
            text='–í—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É!\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É\n –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <üëÄ–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—é –∑–∞—è–≤–∫—É> üëá',
            reply_markup=main_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É /FAQ
@router.callback_query(F.data.in_(['faq_button_pressed']))
async def apply_button_press(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:', reply_markup=faq_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ–¥–Ω–∞ –∏–∑ –∫–Ω–æ–ø–æ–∫ FAQ
@router.callback_query(F.data.in_(['faq_button1']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ï—Å—Ç—å –ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è?\n\n- –ù–µ—Ç. –î–ª—è –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ '
                                          ' –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –º—ã –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–µ–º—Å—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞, —Ç–∫ —ç—Ç–æ '
                                          ' –¥–∞–µ—Ç —Ä—è–¥ –∫–æ–ª–æ—Å—Å–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ (–ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤–æ–≥–æ –±–∞—Ä—å–µ—Ä–∞; '
                                          ' –º–æ—Ç–∏–≤–∞—Ü–∏—è; —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ; —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ; –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞; '
                                          ' –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä; —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –∞—É–¥–∏—Ä–æ–≤–∞–Ω–∏—è; —Å—Ç–æ–∏–º–æ—Å—Ç—å '
                                          ' –æ–±—É—á–µ–Ω–∏—è; –∑–¥–æ—Ä–æ–≤–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è) ', reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button2']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ï—Å—Ç—å –ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –û–ì–≠/ –ï–ì–≠?\n\n- –î–∞, –µ—Å—Ç—å. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ '
                                          '–æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ –º–∏–Ω–∏ –≥—Ä—É–ø–ø–∞—Ö (2-4 —á–µ–ª).', reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button3']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ö–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞–±–æ—Ä –≤ –≥—Ä—É–ø–ø—ã?\n\n- –í –º–∞–µ- –∞–≤–≥—É—Å—Ç–µ. –ù–æ! –ï—Å–ª–∏ '
                                          '–ø–æ—è–≤–ª—è–µ—Ç—Å—è –º–µ—Å—Ç–æ, –º—ã —Å–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ —É—á–µ–Ω–∏–∫–∞–º–∏  –∏–∑ –ª–∏—Å—Ç–∞ '
                                          '–æ–∂–∏–¥–∞–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞.', reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button4']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏—è?\n\n- –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –æ—Å—Ç–∞–≤–∏–≤ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. '
                                          '–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –∏ –ø—Ä–∏–≥–ª–∞—Å—è—Ç –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è.',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button5']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ö—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å?\n\n- –Æ–ª–∏—è –°–º–∏—Ä–Ω–æ–≤–∞ (—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —à–∫–æ–ª—ã), –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, '
                                          '–ª–∏–Ω–≥–≤–∏—Å—Ç, –º–µ—Ç–æ–¥–∏—Å—Ç, —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ –ö–µ–º–±—Ä–∏–¥–∂–µ–º, 15 –ª–µ—Ç –≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–∏.',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button6']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –æ–±—É—á–µ–Ω–∏–µ?\n\n- –û–±—É—á–µ–Ω–∏–µ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –∞–≤–∞–Ω—Å–æ–º –∑–∞ –º–µ—Å—è—Ü (–æ—Ç 8 '
                                          '–¥–æ 10 –∑–∞–Ω—è—Ç–∏–π –≤ –º–µ—Å—è—Ü; –∑–∞–Ω—è—Ç–∏—è –¥–≤–∞ —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é). –û–ø–ª–∞—á–∏–≤–∞—Ç—å —Å–ª–µ–¥—É–µ—Ç 1 '
                                          '—á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞. –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è (60–º–∏–Ω.):\n* —à–∫–æ–ª—å–Ω–∏–∫–∏ - '
                                          '1000—Ä.\n* –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠/–û–ì–≠ - 1800—Ä.\n* —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–ª—É–± - 1500—Ä.',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button7']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤ –≥—Ä—É–ø–ø–µ?\n\n- –û—Ç 4 –¥–æ 8 —á–µ–ª–æ–≤–µ–∫ (—à–∫–æ–ª—å–Ω–∏–∫–∏); –æ—Ç 2-4 '
                                          '—á–µ–ª–æ–≤–µ–∫ - –û–ì–≠/–ï–ì–≠; 2-6 —á–µ–ª–æ–≤–µ–∫ - —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–ª—É–±.',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button8']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –°–∫–æ–ª—å–∫–æ –¥–ª–∏—Ç—Å—è –æ–±—É—á–µ–Ω–∏–µ?\n\n- –û–±—É—á–µ–Ω–∏–µ –¥–ª–∏—Ç—Å—è 9,5 –º–µ—Å—è—Ü–µ–≤ (1 —Å–µ–Ω—Ç—è–±—Ä—è - 15 '
                                          '–∏—é–Ω—è). –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –∑–∏–º–Ω–∏–µ –∫–∞–Ω–∏–∫—É–ª—ã(10 –¥–Ω–µ–π).',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button9']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥?\n\n- –î–∞, –¥–ª—è —ç—Ç–æ–≥–æ '
                                          '—Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –¥–æ–≥–æ–≤–æ—Ä —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω. –ß–µ–∫ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ '
                                          '–µ–∂–µ–º–µ—Å—è—á–Ω–æ –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –≤–∏–¥–µ.', reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button10']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ï—Å—Ç—å –ª–∏ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è?\n\n- –î–∞, –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–æ–π '
                                          '—á–∞—Å—Ç—å—é –æ–±—É—á–µ–Ω–∏—è –∏ —Å–ª—É–∂–∏—Ç —Ü–µ–ª–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∏–∑—É—á–µ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button11']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ì–¥–µ –∏ –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –∑–∞–Ω—è—Ç–∏—è?\n\n- –ó–∞–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ zoom, –Ω–∞ –¥–æ—Å–∫–µ '
                                          'MIRO. –ó–∞–Ω—è—Ç–∏–µ –¥–ª–∏—Ç—Å—è 60 –º–∏–Ω—É—Ç. –ü–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏—è –≤—ã—Å—ã–ª–∞–µ—Ç—Å—è –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ; '
                                          '–≤–µ—Å—å –∏–∑—É—á–µ–Ω–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –Ω–∞ —É—Ä–æ–∫–µ –æ—Å—Ç–∞–µ—Ç—Å—è —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button12']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ù—É–∂–Ω–æ –ª–∏ –ø–æ–∫—É–ø–∞—Ç—å —É—á–µ–±–Ω–∏–∫–∏?\n\n- –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–∫—É–ø–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ. ',
                                     reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['faq_button13']))
async def faq_answer_sent(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='- –ö–∞–∫ –ø–ª–∞—Ç–∏—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª –∑–∞–Ω—è—Ç–∏–µ?\n\n- –í —Å–ª—É—á–∞–µ –ø—Ä–æ–ø—É—Å–∫–∞ —É—Ä–æ–∫–∞ —É—á–µ–Ω–∏–∫—É '
                                          '–≤—ã—Å—ã–ª–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏—è –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è. –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ —ç—Ç–æ–º '
                                          '–Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è.', reply_markup=back_keyboard)


@router.callback_query(F.data.in_(['back_button_pressed']))
async def back_button_press(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.edit_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:', reply_markup=faq_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è
# –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —É—Ä–æ–≤–Ω—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
@router.message(StateFilter(UserInformation.name), F.text.isalpha())
async def process_name_sent(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç: '
                              '–≤–∞—Ä–∏–∞–Ω—Ç:', reply_markup=level_keyboard)
    await state.set_state(UserInformation.language_level)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
# –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
@router.message(StateFilter(UserInformation.name))
async def warning_not_name(message: Message):
    await message.answer(
        text='–¢–æ, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–º—è\n\n'
             '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è!\n\n'
             '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - '
             '–Ω–∞–∂–º–∏—Ç–µ –∫–µ–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏', reply_markup=cancel_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
# –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
@router.callback_query(StateFilter(UserInformation.language_level), F.data.in_(
    ['beginner', 'intermediate', 'advanced', 'dont know']))
async def process_level_sent1(callback: CallbackQuery, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "level"
    await state.update_data(level=callback.data)
    await callback.message.delete()
    await callback.message.answer(
        text='–°–ø–∞—Å–∏–±–æ! –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:'
    )
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
    await state.set_state(UserInformation.age)


@router.callback_query(F.data.in_('own answer'))
async def process_level_sent2(callback: CallbackQuery, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "level"
    await callback.message.edit_text(text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –æ —É—Ä–æ–≤–Ω–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞:',
                                     reply_markup=cancel_keyboard)
    await state.set_state(UserInformation.language_level)


@router.message(StateFilter(UserInformation.language_level), F.text.isalnum())
async def process_level_sent1(message: Message, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "level"
    await state.update_data(level=message.text)
    await message.answer(
        text='–°–ø–∞—Å–∏–±–æ! –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
# –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
@router.message(StateFilter(UserInformation.age), lambda x: x.text.isdigit() and 7 <= int(x.text) <= 60)
async def process_age_sent(message: Message, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "age"
    await state.update_data(age=message.text)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞:', reply_markup=target_keyboard)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    await state.set_state(UserInformation.learn_target)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
# –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
@router.message(StateFilter(UserInformation.age))
async def warning_not_age(message: Message):
    await message.answer(text='–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 7 –¥–æ 60\n\n''–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\n''–ï—Å–ª–∏ –≤—ã '
                              '—Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –Ω–∞–∂–º–∏—Ç–µ –∫–µ–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏',
                         reply_markup=cancel_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ —Ü–µ–ª—å –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
# –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.callback_query(StateFilter(UserInformation.learn_target), F.data.in_(
    ['for work', 'for exam prep', 'for school', 'for self development']))
async def process_target_sent(callback: CallbackQuery, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "target"
    await state.update_data(target=callback.data)
    await callback.message.delete()
    await callback.message.answer(
        text='–°–ø–∞—Å–∏–±–æ! –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8xxxxxxxxxx:'
    )
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    await state.set_state(UserInformation.telephone)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
# –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
@router.message(StateFilter(UserInformation.telephone), lambda x: x.text.isdigit())
async def process_telephone_sent(message: Message, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "telephone"
    await state.update_data(telephone=message.text)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ —É–¥–æ–±–Ω–æ–≥–æ –≤–∞–º –¥–ª—è –æ–±—É—á–µ–Ω–∏—è:',
                         reply_markup=time_keyboard)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    await state.set_state(UserInformation.time_priority)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
# –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
@router.message(StateFilter(UserInformation.telephone))
async def warning_not_telephone(message: Message):
    await message.answer(
        text='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –∏–∑ —á–∏—Å–µ–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8xxxxxxxxxx\n\n''–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\n''–ï—Å–ª–∏ –≤—ã '
             '—Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –Ω–∞–∂–º–∏—Ç–µ –∫–µ–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏',
        reply_markup=cancel_keyboard)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è
# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∞–Ω–∫–µ—Ç—ã
@router.callback_query(StateFilter(UserInformation.time_priority),
                       F.data.in_(['in the morning', 'in the afternoon', 'in the evening']))
async def process_target_sent(callback: CallbackQuery, state: FSMContext):
    # C–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "time"
    await state.update_data(time=callback.data)
    await callback.message.delete()
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø–æ –∫–ª—é—á—É id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_dict[callback.from_user.id] = await state.get_data()
    await save_user_request(user_dict)
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.clear()
    await callback.message.answer(
        text='–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n''–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π!',
        reply_markup=main_keyboard
    )

    await bot.send_message(text=f"–ò–º—è:{user_dict[callback.from_user.id]['name']}\n"
                                f"–£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ: {user_dict[callback.from_user.id]['level']}\n"
                                f"–í–æ–∑—Ä–∞—Å—Ç: {user_dict[callback.from_user.id]['age']}\n"
                                f"–¶–µ–ª—å –æ–±—É—á–µ–Ω–∏—è: {user_dict[callback.from_user.id]['target']}\n"
                                f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_dict[callback.from_user.id]['telephone']}\n"
                                f"–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π: {user_dict[callback.from_user.id]['time']}",
                           chat_id=1726588078
                           )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
# –∫—Ä–æ–º–µ —Ç–µ—Ö, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã!
@router.message(StateFilter(default_state))
async def send_echo(message: Message):
    await message.delete()

